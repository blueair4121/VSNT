{"ast":null,"code":"var _jsxFileName = \"D:\\\\project react\\\\vsnt\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport languages from './languages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n'use strict';\n\nconst _ = require(\"lodash\");\n\nconst isUrl = require(\"is-url\");\n\nconst isNumber = require(\"num-or-not\");\n\nconst isKeyword = require('is-keyword-js');\n\nconst got = require('got');\n\nconst userAgents = require(\"user-agents\");\n\nconst token = require('./token'); //const languages = require('./languages')\n\n\nfunction checkSame(v, maps) {\n  for (const idx in maps) {\n    if (maps[idx].v === v) {\n      return idx;\n    }\n  }\n\n  return -1;\n}\n\nfunction enMap(obj, except = [], path = '', map = []) {\n  if (_.isObject(obj) == true) {\n    _.forEach(obj, (v, k) => {\n      const furKeyStr = _.isNumber(k) ? `[${k}]` : (path && '.') + k;\n      const curPath = path + furKeyStr;\n\n      if (_.isObject(v) == true) {\n        enMap(v, except, curPath, map);\n      } else {\n        const exceptReg = except.length > 0 ? new RegExp(`(^|\\\\.)(${_.map(except, _.escapeRegExp).join('|')})(\\\\.|\\\\[|$)`, 'i') : false;\n\n        if (_.isString(v) && !isNumber(v) && !isUrl(v) && !isKeyword(v) && !/^(?!([a-z]+|\\d+|[\\?=\\.\\*\\[\\]~!@#\\$%\\^&\\(\\)_+`\\/\\-={}:\";'<>,]+)$)[a-z\\d\\?=\\.\\*\\[\\]~!@#\\$%\\^&\\(\\)_+`\\/\\-={}:\";'<>,]+$/i.test(v) && (!exceptReg || !exceptReg.test(curPath))) {\n          const idx = checkSame(v, map);\n\n          if (idx > -1) {\n            map.splice(idx + 1, 0, {\n              p: curPath,\n              v: v,\n              i: map[idx].i,\n              l: map[idx].l,\n              s: true\n            });\n          } else {\n            const lastMap = _.last(map);\n\n            map.push({\n              p: curPath,\n              v: v,\n              i: lastMap ? lastMap.i + lastMap.l : 0,\n              l: v.split(\"\\n\").length,\n              s: false\n            });\n          }\n        }\n      }\n    });\n  } else {\n    map.push({\n      p: '',\n      v: obj,\n      i: 0,\n      l: obj.split(\"\\n\").length\n    });\n  }\n\n  return map;\n}\n\nfunction deMap(src, maps, dest) {\n  if (_.isObject(src) == true) {\n    src = _.clone(src);\n    dest = dest.split(\"\\n\");\n\n    for (const map of maps) {\n      _.set(src, map.p, _.slice(dest, map.i, map.i + map.l).join(\"\\n\"));\n    }\n  } else {\n    src = dest;\n  }\n\n  return src;\n}\n\nasync function translate(input, opts = {}, domain = 'translate.google.cn') {\n  const langs = [opts.from, opts.to];\n  const except = opts.except || [];\n  input = _.cloneDeep(input);\n\n  for (const lang of langs) {\n    if (lang && !languages.isSupported(lang)) {\n      const e = new Error('The language \\'' + lang + '\\' is not supported');\n      e.code = 400;\n      throw e;\n    }\n  }\n\n  opts.from = languages.getCode(opts.from || 'auto');\n  opts.to = languages.getCode(opts.to || 'en');\n  const strMap = enMap(input, except);\n\n  const text = _.map(_.differenceBy(strMap, [{\n    s: true\n  }], 's'), 'v').join(\"\\n\");\n\n  const tokenRet = await token.get(text, domain);\n  const url = `https://${domain}/translate_a/single`;\n  const searchParams = new URLSearchParams([['client', 't'], ['sl', opts.from], ['tl', opts.to], ['hl', opts.to], ['dt', 'at'], ['dt', 'bd'], ['dt', 'ex'], ['dt', 'ld'], ['dt', 'md'], ['dt', 'qca'], ['dt', 'rw'], ['dt', 'rm'], ['dt', 'ss'], ['dt', 't'], ['ie', 'UTF-8'], ['oe', 'UTF-8'], ['otf', 1], ['ssel', 0], ['tsel', 0], ['kc', 7], ['q', text], [tokenRet.name, tokenRet.value]]);\n  const opt = {\n    responseType: 'json',\n    headers: {\n      'User-Agent': new userAgents({\n        deviceCategory: 'desktop'\n      }).toString()\n    }\n  };\n\n  if (searchParams.toString().length <= 1980) {\n    opt.method = 'GET';\n  } else {\n    searchParams.delete('q');\n    opt.method = 'POST';\n    opt.form = {\n      q: text\n    };\n  }\n\n  opt.searchParams = searchParams;\n\n  try {\n    const {\n      body\n    } = await got(url, opt);\n\n    const retString = _.map(body[0], 0).join('');\n\n    return deMap(input, strMap, retString);\n  } catch (error) {\n    let e = new Error(error.message);\n\n    if (error.statusCode !== undefined && error.statusCode !== 200) {\n      e.code = 'BAD_REQUEST';\n    } else {\n      e.code = 'BAD_NETWORK';\n    }\n\n    throw e;\n  }\n}\n\nmodule.exports = translate;\nmodule.exports.languages = languages;","map":{"version":3,"sources":["D:/project react/vsnt/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","languages","render","document","getElementById","unregister","_","require","isUrl","isNumber","isKeyword","got","userAgents","token","checkSame","v","maps","idx","enMap","obj","except","path","map","isObject","forEach","k","furKeyStr","curPath","exceptReg","length","RegExp","escapeRegExp","join","isString","test","splice","p","i","l","s","lastMap","last","push","split","deMap","src","dest","clone","set","slice","translate","input","opts","domain","langs","from","to","cloneDeep","lang","isSupported","e","Error","code","getCode","strMap","text","differenceBy","tokenRet","get","url","searchParams","URLSearchParams","name","value","opt","responseType","headers","deviceCategory","toString","method","delete","form","q","body","retString","error","message","statusCode","undefined","module","exports"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport languages from './languages';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n'use strict'\nconst _ = require(\"lodash\")\nconst isUrl = require(\"is-url\")\nconst isNumber = require(\"num-or-not\")\nconst isKeyword = require('is-keyword-js')\nconst got = require('got')\nconst userAgents = require(\"user-agents\")\nconst token = require('./token')\n//const languages = require('./languages')\n\nfunction checkSame(v, maps) {\n  for (const idx in maps) {\n    if (maps[idx].v === v) {\n      return idx\n    }\n  }\n  return -1\n}\n\nfunction enMap(obj, except=[], path='', map=[]) {\n  if (_.isObject(obj) == true) {\n    _.forEach(obj, (v, k) => {\n      const furKeyStr = _.isNumber(k) ? `[${k}]` : ( path && '.' ) + k\n      const curPath = path + furKeyStr\n      if (_.isObject(v) == true) {\n        enMap(v, except, curPath, map)\n      } else {\n        const exceptReg = except.length > 0 ? new RegExp(`(^|\\\\.)(${_.map(except, _.escapeRegExp).join('|')})(\\\\.|\\\\[|$)`, 'i') : false\n        if (\n          _.isString(v) &&\n          !isNumber(v) &&\n          !isUrl(v) &&\n          !isKeyword(v) &&\n          !/^(?!([a-z]+|\\d+|[\\?=\\.\\*\\[\\]~!@#\\$%\\^&\\(\\)_+`\\/\\-={}:\";'<>,]+)$)[a-z\\d\\?=\\.\\*\\[\\]~!@#\\$%\\^&\\(\\)_+`\\/\\-={}:\";'<>,]+$/i.test(v) &&\n          (!exceptReg || !exceptReg.test(curPath))\n        ) {\n          const idx = checkSame(v, map)\n          if (idx > -1) {\n            map.splice(idx+1, 0, {\n              p: curPath,\n              v: v,\n              i: map[idx].i,\n              l: map[idx].l,\n              s: true\n            })\n          } else {\n            const lastMap = _.last(map)\n            map.push({\n              p: curPath,\n              v: v,\n              i: lastMap ? lastMap.i + lastMap.l : 0,\n              l: v.split(\"\\n\").length,\n              s: false\n            })\n          }\n        }\n      }\n    })\n  } else {\n    map.push({\n      p: '',\n      v: obj,\n      i: 0,\n      l: obj.split(\"\\n\").length\n    })\n  }\n  return map\n}\n\nfunction deMap(src, maps, dest) {\n  if (_.isObject(src) == true) {\n    src = _.clone(src)\n    dest = dest.split(\"\\n\")\n    for (const map of maps) {\n      _.set(src, map.p, _.slice(dest, map.i, map.i+map.l).join(\"\\n\"))\n    }\n  } else {\n    src = dest\n  }\n  return src\n}\n\nasync function translate(input, opts = {}, domain='translate.google.cn') {\n  const langs = [opts.from, opts.to]\n  const except = opts.except || []\n  input = _.cloneDeep(input)\n  for (const lang of langs) {\n    if (lang && !languages.isSupported(lang)) {\n      const e = new Error('The language \\'' + lang + '\\' is not supported')\n      e.code = 400\n      throw e\n    }\n  }\n\n  opts.from = languages.getCode(opts.from || 'auto')\n  opts.to = languages.getCode(opts.to || 'en')\n\n  const strMap = enMap(input, except)\n  const text = _.map(_.differenceBy(strMap, [{ s: true }], 's'), 'v').join(\"\\n\")\n  const tokenRet = await token.get(text, domain)\n  const url = `https://${domain}/translate_a/single`\n  const searchParams = new URLSearchParams([\n    ['client', 't'],\n    ['sl', opts.from],\n    ['tl', opts.to],\n    ['hl', opts.to],\n    ['dt', 'at'], ['dt', 'bd'], ['dt', 'ex'], ['dt', 'ld'], ['dt', 'md'], ['dt', 'qca'], ['dt', 'rw'], ['dt', 'rm'], ['dt', 'ss'], ['dt', 't'],\n    ['ie', 'UTF-8'],\n    ['oe', 'UTF-8'],\n    ['otf', 1],\n    ['ssel', 0],\n    ['tsel', 0],\n    ['kc', 7],\n    ['q', text],\n    [tokenRet.name, tokenRet.value]\n  ])\n  const opt = { responseType: 'json', headers: {'User-Agent': new userAgents({ deviceCategory: 'desktop' }).toString()} }\n  if (searchParams.toString().length <= 1980) {\n    opt.method = 'GET'\n  } else {\n    searchParams.delete('q')\n    opt.method = 'POST'\n    opt.form = { q: text }\n  }\n  opt.searchParams = searchParams\n  try {\n    const { body } = await got(url, opt)\n    const retString = _.map(body[0], 0).join('')\n    return deMap(input, strMap, retString)\n  } catch (error) {\n    let e = new Error(error.message)\n    if (error.statusCode !== undefined && error.statusCode !== 200) {\n      e.code = 'BAD_REQUEST'\n    } else {\n      e.code = 'BAD_NETWORK'\n    }\n    throw e\n  }\n}\n\nmodule.exports = translate\nmodule.exports.languages = languages\n"]},"metadata":{},"sourceType":"module"}