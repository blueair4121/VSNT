{"ast":null,"code":"\"use strict\"; // Copyright 2017 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _classCallCheck = require(\"D:/project react/vsnt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:/project react/vsnt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"D:/project react/vsnt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"D:/project react/vsnt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"D:/project react/vsnt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"D:/project react/vsnt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Translate = void 0;\n\nvar common_1 = require(\"@google-cloud/common\");\n\nvar promisify_1 = require(\"@google-cloud/promisify\");\n\nvar arrify = require(\"arrify\");\n\nvar extend = require(\"extend\"); // eslint-disable-next-line @typescript-eslint/no-var-requires\n\n\nvar isHtml = require('is-html'); // eslint-disable-next-line @typescript-eslint/no-var-requires\n\n\nvar PKG = require('../../../package.json');\n/**\n * @typedef {object} ClientConfig\n * @memberof v2\n * @property {string} [projectId] The project ID from the Google Developer's\n *     Console, e.g. 'grape-spaceship-123'. We will also check the environment\n *     variable `GCLOUD_PROJECT` for your project ID. If your app is running in\n *     an environment which supports {@link\n * https://cloud.google.com/docs/authentication/production#providing_credentials_to_your_application\n * Application Default Credentials}, your project ID will be detected\n * automatically.\n * @property {string} [key] An API key. You should prefer using a Service\n *     Account key file instead of an API key.\n * @property {string} [keyFilename] Full path to the a .json, .pem, or .p12 key\n *     downloaded from the Google Developers Console. If you provide a path to a\n *     JSON file, the `projectId` option above is not necessary. NOTE: .pem and\n *     .p12 require you to specify the `email` option as well.\n * @property {string} [email] Account email address. Required when using a .pem\n *     or .p12 keyFilename.\n * @property {object} [credentials] Credentials object.\n * @property {string} [credentials.client_email]\n * @property {string} [credentials.private_key]\n * @property {boolean} [autoRetry=true] Automatically retry requests if the\n *     response is related to rate limits or certain intermittent server errors.\n *     We will exponentially backoff subsequent requests by default.\n * @property {number} [maxRetries=3] Maximum number of automatic retries\n *     attempted before returning the error.\n * @property {Constructor} [promise] Custom promise module to use instead of\n *     native Promises.\n */\n\n/**\n * With [Google Translate](https://cloud.google.com/translate), you can\n * dynamically translate text between thousands of language pairs.\n *\n * The Google Cloud Translation API lets websites and programs integrate with\n * Google Translate programmatically.\n *\n * @class\n * @memberof v2\n *\n * @see [Getting Started]{@link https://cloud.google.com/translate/v2/getting_started}\n * @see [Identifying your application to Google]{@link https://cloud.google.com/translate/v2/using_rest#auth}\n *\n * @param {ClientConfig} [options] Configuration options.\n *\n * @example\n * //-\n * // <h3>Custom Translation API</h3>\n * //\n * // The environment variable, `GOOGLE_CLOUD_TRANSLATE_ENDPOINT`, is honored as\n * // a custom backend which our library will send requests to.\n * //-\n *\n * @example <caption>include:samples/quickstart.js</caption>\n * region_tag:translate_quickstart\n * Full quickstart example:\n */\n\n\nvar Translate = /*#__PURE__*/function (_common_1$Service) {\n  _inherits(Translate, _common_1$Service);\n\n  var _super = _createSuper(Translate);\n\n  function Translate() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Translate);\n\n    options.apiEndpoint = options.apiEndpoint || 'translation.googleapis.com';\n    var baseUrl = \"https://\".concat(options.apiEndpoint, \"/language/translate/v2\");\n\n    if (process.env.GOOGLE_CLOUD_TRANSLATE_ENDPOINT) {\n      baseUrl = process.env.GOOGLE_CLOUD_TRANSLATE_ENDPOINT.replace(/\\/+$/, '');\n    }\n\n    var config = {\n      apiEndpoint: options.apiEndpoint,\n      baseUrl: baseUrl,\n      scopes: ['https://www.googleapis.com/auth/cloud-platform'],\n      packageJson: require('../../../package.json'),\n      projectIdRequired: false\n    };\n    _this = _super.call(this, config, options);\n    _this.options = options || {};\n\n    if (_this.options.key) {\n      _this.key = _this.options.key;\n    }\n\n    return _this;\n  }\n  /**\n   * @typedef {object} DetectResult\n   * @memberof v2\n   * @property {string} 0.language The language code matched from the input.\n   * @property {number} [0.confidence] A float 0 - 1. The higher the number, the\n   *     higher the confidence in language detection. Note, this is not always\n   *     returned from the API.\n   * @property {object} 1 The full API response.\n   */\n\n  /**\n   * @callback DetectCallback\n   * @memberof v2\n   * @param {?Error} err Request error, if any.\n   * @param {object|object[]} results The detection results.\n   * @param {string} results.language The language code matched from the input.\n   * @param {number} [results.confidence] A float 0 - 1. The higher the number, the\n   *     higher the confidence in language detection. Note, this is not always\n   *     returned from the API.\n   * @param {object} apiResponse The full API response.\n   */\n\n  /**\n   * Detect the language used in a string or multiple strings.\n   *\n   * @see [Detect Language]{@link https://cloud.google.com/translate/v2/using_rest#detect-language}\n   *\n   * @param {string|string[]} input - The source string input.\n   * @param {DetectCallback} [callback] Callback function.\n   * @returns {Promise<DetectResponse>}\n   *\n   * @example\n   * const {Translate} = require('@google-cloud/translate');\n   *\n   * const translate = new Translate();\n   *\n   * //-\n   * // Detect the language from a single string input.\n   * //-\n   * translate.detect('Hello', (err, results) => {\n   *   if (!err) {\n   *     // results = {\n   *     //   language: 'en',\n   *     //   confidence: 1,\n   *     //   input: 'Hello'\n   *     // }\n   *   }\n   * });\n   *\n   * //-\n   * // Detect the languages used in multiple strings. Note that the results are\n   * // now provided as an array.\n   * //-\n   * translate.detect([\n   *   'Hello',\n   *   'Hola'\n   * ], (err, results) => {\n   *   if (!err) {\n   *     // results = [\n   *     //   {\n   *     //     language: 'en',\n   *     //     confidence: 1,\n   *     //     input: 'Hello'\n   *     //   },\n   *     //   {\n   *     //     language: 'es',\n   *     //     confidence: 1,\n   *     //     input: 'Hola'\n   *     //   }\n   *     // ]\n   *   }\n   * });\n   *\n   * //-\n   * // If the callback is omitted, we'll return a Promise.\n   * //-\n   * translate.detect('Hello').then((data) => {\n   *   const results = data[0];\n   *   const apiResponse = data[2];\n   * });\n   *\n   * @example <caption>include:samples/translate.js</caption>\n   * region_tag:translate_detect_language\n   * Here's a full example:\n   */\n\n\n  _createClass(Translate, [{\n    key: \"detect\",\n    value: function detect(input, callback) {\n      var inputIsArray = Array.isArray(input);\n      input = arrify(input);\n      this.request({\n        method: 'POST',\n        uri: '/detect',\n        json: {\n          q: input\n        }\n      }, function (err, resp) {\n        if (err) {\n          callback(err, null, resp);\n          return;\n        }\n\n        var results = resp.data.detections.map(function (detection, index) {\n          var result = extend({}, detection[0], {\n            input: input[index]\n          }); // Deprecated.\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          delete result.isReliable;\n          return result;\n        });\n\n        if (input.length === 1 && !inputIsArray) {\n          results = results[0];\n        }\n\n        callback(null, results, resp);\n      });\n    }\n    /**\n     * @typedef {object} LanguageResult\n     * @memberof v2\n     * @property {string} code The [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1)\n     *     language code.\n     * @property {string} name The language name. This can be translated into your\n     *     preferred language with the `target` option.\n     */\n\n    /**\n     * @callback GetLanguagesCallback\n     * @memberof v2\n     * @param {?Error} err Request error, if any.\n     * @param {object[]} results The languages supported by the API.\n     * @param {string} results.code The [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1)\n     *     language code.\n     * @param {string} results.name The language name. This can be translated into your\n     *     preferred language with the `target` option.\n     * @param {object} apiResponse The full API response.\n     */\n\n    /**\n     * Get an array of all supported languages.\n     *\n     * @see [Discovering Supported Languages]{@link https://cloud.google.com/translate/v2/discovering-supported-languages-with-rest}\n     *\n     * @param {string} [target] Get the language names in a language other than\n     *     English.\n     * @param {GetLanguagesCallback} [callback] Callback function.\n     * @returns {Promise<GetLanguagesResponse>}\n     *\n     * @example <caption>include:samples/translate.js</caption>\n     * region_tag:translate_list_codes\n     * Gets the language names in English:\n     *\n     * @example <caption>include:samples/translate.js</caption>\n     * region_tag:translate_list_language_names\n     * Gets the language names in a language other than English:\n     */\n\n  }, {\n    key: \"getLanguages\",\n    value: function getLanguages(targetOrCallback, callback) {\n      var target;\n\n      if (typeof targetOrCallback === 'function') {\n        callback = targetOrCallback;\n        target = 'en';\n      } else {\n        target = targetOrCallback;\n      }\n\n      var reqOpts = {\n        uri: '/languages',\n        useQuerystring: true,\n        qs: {}\n      };\n\n      if (target && typeof target === 'string') {\n        reqOpts.qs.target = target;\n      }\n\n      this.request(reqOpts, function (err, resp) {\n        if (err) {\n          callback(err, null, resp);\n          return;\n        }\n\n        var languages = resp.data.languages.map(function (language) {\n          return {\n            code: language.language,\n            name: language.name\n          };\n        });\n        callback(null, languages, resp);\n      });\n    }\n    /**\n     * Translate request options.\n     *\n     * @typedef {object} TranslateRequest\n     * @memberof v2\n     * @property {string} [format] Set the text's format as `html` or `text`.\n     *     If not provided, we will try to auto-detect if the text given is HTML.\n     * If not, we set the format as `text`.\n     * @property {string} [from] The ISO 639-1 language code the source input\n     *     is written in.\n     * @property {string} [model] Set the model type requested for this\n     *     translation. Please refer to the upstream documentation for possible\n     *     values.\n     * @property {string} to The ISO 639-1 language code to translate the\n     *     input to.\n     */\n\n    /**\n     * @callback TranslateCallback\n     * @memberof v2\n     * @param {?Error} err Request error, if any.\n     * @param {object|object[]} translations If a single string input was given, a\n     *     single translation is given. Otherwise, it is an array of translations.\n     * @param {object} apiResponse The full API response.\n     */\n\n    /**\n     * Translate a string or multiple strings into another language.\n     *\n     * @see [Translate Text](https://cloud.google.com/translate/v2/using_rest#Translate)\n     *\n     * @throws {Error} If `options` is provided as an object without a `to`\n     *     property.\n     *\n     * @param {string|string[]} input The source string input.\n     * @param {string|TranslateRequest} [options] If a string, it is interpreted as the\n     *     target ISO 639-1 language code to translate the source input to. (e.g.\n     *     `en` for English). If an object, you may also specify the source\n     *     language.\n     * @param {TranslateCallback} [callback] Callback function.\n     * @returns {Promise<TranslateResponse>}\n     *\n     * @example\n     * //-\n     * // Pass a string and a language code to get the translation.\n     * //-\n     * translate.translate('Hello', 'es', (err, translation) => {\n     *   if (!err) {\n     *     // translation = 'Hola'\n     *   }\n     * });\n     *\n     * //-\n     * // The source language is auto-detected by default. To manually set it,\n     * // provide an object.\n     * //-\n     * const options = {\n     *   from: 'en',\n     *   to: 'es'\n     * };\n     *\n     * translate.translate('Hello', options, (err, translation) => {\n     *   if (!err) {\n     *     // translation = 'Hola'\n     *   }\n     * });\n     *\n     * //-\n     * // Translate multiple strings of input. Note that the results are\n     * // now provided as an array.\n     * //-\n     * const input = [\n     *   'Hello',\n     *   'How are you today?'\n     * ];\n     *\n     * translate.translate(input, 'es', (err, translations) => {\n     *   if (!err) {\n     *     // translations = [\n     *     //   'Hola',\n     *     //   'Como estas hoy?'\n     *     // ]\n     *   }\n     * });\n     *\n     * //-\n     * // If the callback is omitted, we'll return a Promise.\n     * //-\n     * translate.translate('Hello', 'es').then((data) => {\n     *   const translation = data[0];\n     *   const apiResponse = data[1];\n     * });\n     *\n     * @example <caption>include:samples/translate.js</caption>\n     * region_tag:translate_translate_text\n     * Full translation example:\n     *\n     * @example <caption>include:samples/translate.js</caption>\n     * region_tag:translate_text_with_model\n     * Translation using the premium model:\n     */\n\n  }, {\n    key: \"translate\",\n    value: function translate(inputs, optionsOrTo, callback) {\n      var inputIsArray = Array.isArray(inputs);\n      var input = arrify(inputs);\n      var options = {};\n\n      if (typeof optionsOrTo === 'object') {\n        options = optionsOrTo;\n      } else if (typeof optionsOrTo === 'string') {\n        options = {\n          to: optionsOrTo\n        };\n      } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var body = {\n        q: input,\n        format: options.format || (isHtml(input[0]) ? 'html' : 'text')\n      };\n\n      if (typeof options === 'string') {\n        body.target = options;\n      } else {\n        if (options.from) {\n          body.source = options.from;\n        }\n\n        if (options.to) {\n          body.target = options.to;\n        }\n\n        if (options.model) {\n          body.model = options.model;\n        }\n      }\n\n      if (!body.target) {\n        throw new Error('A target language is required to perform a translation.');\n      }\n\n      this.request({\n        method: 'POST',\n        uri: '',\n        json: body\n      }, function (err, resp) {\n        if (err) {\n          callback(err, null, resp);\n          return;\n        }\n\n        var translations = resp.data.translations.map(function (x) {\n          return x.translatedText;\n        });\n\n        if (body.q.length === 1 && !inputIsArray) {\n          translations = translations[0];\n        }\n\n        callback(err, translations, resp);\n      });\n    }\n    /**\n     * A custom request implementation. Requests to this API may optionally use an\n     * API key for an application, not a bearer token from a service account. This\n     * means it is possible to skip the `makeAuthenticatedRequest` portion of the\n     * typical request lifecycle, and manually authenticate the request here.\n     *\n     * @private\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {function} callback - The callback function passed to `request`.\n     */\n\n  }, {\n    key: \"request\",\n    value: function request(reqOpts, callback) {\n      if (!this.key) {\n        _get(_getPrototypeOf(Translate.prototype), \"request\", this).call(this, reqOpts, callback);\n\n        return;\n      }\n\n      reqOpts.uri = this.baseUrl + reqOpts.uri;\n      reqOpts = extend(true, {}, reqOpts, {\n        qs: {\n          key: this.key\n        },\n        headers: {\n          'User-Agent': common_1.util.getUserAgentFromPackageJson(PKG)\n        }\n      });\n      common_1.util.makeRequest(reqOpts, this.options, callback);\n    }\n  }]);\n\n  return Translate;\n}(common_1.Service);\n\nexports.Translate = Translate;\n/*! Developer Documentation\n *\n * All async methods (except for streams) will return a Promise in the event\n * that a callback is omitted.\n */\n\npromisify_1.promisifyAll(Translate, {\n  exclude: ['request']\n});","map":{"version":3,"sources":["D:/project react/vsnt/node_modules/@google-cloud/translate/build/src/v2/index.js"],"names":["Object","defineProperty","exports","value","Translate","common_1","require","promisify_1","arrify","extend","isHtml","PKG","options","apiEndpoint","baseUrl","process","env","GOOGLE_CLOUD_TRANSLATE_ENDPOINT","replace","config","scopes","packageJson","projectIdRequired","key","input","callback","inputIsArray","Array","isArray","request","method","uri","json","q","err","resp","results","data","detections","map","detection","index","result","isReliable","length","targetOrCallback","target","reqOpts","useQuerystring","qs","languages","language","code","name","inputs","optionsOrTo","to","body","format","from","source","model","Error","translations","x","translatedText","headers","util","getUserAgentFromPackageJson","makeRequest","Service","promisifyAll","exclude"],"mappings":"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X,GAApB,CAAwB,UAACY,QAAD,EAAc;AACpD,iBAAO;AACHC,YAAAA,IAAI,EAAED,QAAQ,CAACA,QADZ;AAEHE,YAAAA,IAAI,EAAEF,QAAQ,CAACE;AAFZ,WAAP;AAIH,SALiB,CAAlB;AAMA5B,QAAAA,QAAQ,CAAC,IAAD,EAAOyB,SAAP,EAAkBf,IAAlB,CAAR;AACH,OAZD;AAaH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,mBAAUmB,MAAV,EAAkBC,WAAlB,EAA+B9B,QAA/B,EAAyC;AACrC,UAAMC,YAAY,GAAGC,KAAK,CAACC,OAAN,CAAc0B,MAAd,CAArB;AACA,UAAM9B,KAAK,GAAGhB,MAAM,CAAC8C,MAAD,CAApB;AACA,UAAI1C,OAAO,GAAG,EAAd;;AACA,UAAI,OAAO2C,WAAP,KAAuB,QAA3B,EAAqC;AACjC3C,QAAAA,OAAO,GAAG2C,WAAV;AACH,OAFD,MAGK,IAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;AACtC3C,QAAAA,OAAO,GAAG;AAAE4C,UAAAA,EAAE,EAAED;AAAN,SAAV;AACH,OAToC,CAUrC;;;AACA,UAAME,IAAI,GAAG;AACTxB,QAAAA,CAAC,EAAET,KADM;AAETkC,QAAAA,MAAM,EAAE9C,OAAO,CAAC8C,MAAR,KAAmBhD,MAAM,CAACc,KAAK,CAAC,CAAD,CAAN,CAAN,GAAmB,MAAnB,GAA4B,MAA/C;AAFC,OAAb;;AAIA,UAAI,OAAOZ,OAAP,KAAmB,QAAvB,EAAiC;AAC7B6C,QAAAA,IAAI,CAACX,MAAL,GAAclC,OAAd;AACH,OAFD,MAGK;AACD,YAAIA,OAAO,CAAC+C,IAAZ,EAAkB;AACdF,UAAAA,IAAI,CAACG,MAAL,GAAchD,OAAO,CAAC+C,IAAtB;AACH;;AACD,YAAI/C,OAAO,CAAC4C,EAAZ,EAAgB;AACZC,UAAAA,IAAI,CAACX,MAAL,GAAclC,OAAO,CAAC4C,EAAtB;AACH;;AACD,YAAI5C,OAAO,CAACiD,KAAZ,EAAmB;AACfJ,UAAAA,IAAI,CAACI,KAAL,GAAajD,OAAO,CAACiD,KAArB;AACH;AACJ;;AACD,UAAI,CAACJ,IAAI,CAACX,MAAV,EAAkB;AACd,cAAM,IAAIgB,KAAJ,CAAU,yDAAV,CAAN;AACH;;AACD,WAAKjC,OAAL,CAAa;AACTC,QAAAA,MAAM,EAAE,MADC;AAETC,QAAAA,GAAG,EAAE,EAFI;AAGTC,QAAAA,IAAI,EAAEyB;AAHG,OAAb,EAIG,UAACvB,GAAD,EAAMC,IAAN,EAAe;AACd,YAAID,GAAJ,EAAS;AACLT,UAAAA,QAAQ,CAACS,GAAD,EAAM,IAAN,EAAYC,IAAZ,CAAR;AACA;AACH;;AACD,YAAI4B,YAAY,GAAG5B,IAAI,CAACE,IAAL,CAAU0B,YAAV,CAAuBxB,GAAvB,CAA2B,UAACyB,CAAD;AAAA,iBAAOA,CAAC,CAACC,cAAT;AAAA,SAA3B,CAAnB;;AACA,YAAIR,IAAI,CAACxB,CAAL,CAAOW,MAAP,KAAkB,CAAlB,IAAuB,CAAClB,YAA5B,EAA0C;AACtCqC,UAAAA,YAAY,GAAGA,YAAY,CAAC,CAAD,CAA3B;AACH;;AACDtC,QAAAA,QAAQ,CAACS,GAAD,EAAM6B,YAAN,EAAoB5B,IAApB,CAAR;AACH,OAdD;AAeH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,iBAAQY,OAAR,EAAiBtB,QAAjB,EAA2B;AACvB,UAAI,CAAC,KAAKF,GAAV,EAAe;AACX,+EAAcwB,OAAd,EAAuBtB,QAAvB;;AACA;AACH;;AACDsB,MAAAA,OAAO,CAAChB,GAAR,GAAc,KAAKjB,OAAL,GAAeiC,OAAO,CAAChB,GAArC;AACAgB,MAAAA,OAAO,GAAGtC,MAAM,CAAC,IAAD,EAAO,EAAP,EAAWsC,OAAX,EAAoB;AAChCE,QAAAA,EAAE,EAAE;AACA1B,UAAAA,GAAG,EAAE,KAAKA;AADV,SAD4B;AAIhC2C,QAAAA,OAAO,EAAE;AACL,wBAAc7D,QAAQ,CAAC8D,IAAT,CAAcC,2BAAd,CAA0CzD,GAA1C;AADT;AAJuB,OAApB,CAAhB;AAQAN,MAAAA,QAAQ,CAAC8D,IAAT,CAAcE,WAAd,CAA0BtB,OAA1B,EAAmC,KAAKnC,OAAxC,EAAiDa,QAAjD;AACH;;;;EArXmBpB,QAAQ,CAACiE,O;;AAuXjCpE,OAAO,CAACE,SAAR,GAAoBA,SAApB;AACA;AACA;AACA;AACA;AACA;;AACAG,WAAW,CAACgE,YAAZ,CAAyBnE,SAAzB,EAAoC;AAAEoE,EAAAA,OAAO,EAAE,CAAC,SAAD;AAAX,CAApC","sourcesContent":["\"use strict\";\n// Copyright 2017 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Translate = void 0;\nconst common_1 = require(\"@google-cloud/common\");\nconst promisify_1 = require(\"@google-cloud/promisify\");\nconst arrify = require(\"arrify\");\nconst extend = require(\"extend\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst isHtml = require('is-html');\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst PKG = require('../../../package.json');\n/**\n * @typedef {object} ClientConfig\n * @memberof v2\n * @property {string} [projectId] The project ID from the Google Developer's\n *     Console, e.g. 'grape-spaceship-123'. We will also check the environment\n *     variable `GCLOUD_PROJECT` for your project ID. If your app is running in\n *     an environment which supports {@link\n * https://cloud.google.com/docs/authentication/production#providing_credentials_to_your_application\n * Application Default Credentials}, your project ID will be detected\n * automatically.\n * @property {string} [key] An API key. You should prefer using a Service\n *     Account key file instead of an API key.\n * @property {string} [keyFilename] Full path to the a .json, .pem, or .p12 key\n *     downloaded from the Google Developers Console. If you provide a path to a\n *     JSON file, the `projectId` option above is not necessary. NOTE: .pem and\n *     .p12 require you to specify the `email` option as well.\n * @property {string} [email] Account email address. Required when using a .pem\n *     or .p12 keyFilename.\n * @property {object} [credentials] Credentials object.\n * @property {string} [credentials.client_email]\n * @property {string} [credentials.private_key]\n * @property {boolean} [autoRetry=true] Automatically retry requests if the\n *     response is related to rate limits or certain intermittent server errors.\n *     We will exponentially backoff subsequent requests by default.\n * @property {number} [maxRetries=3] Maximum number of automatic retries\n *     attempted before returning the error.\n * @property {Constructor} [promise] Custom promise module to use instead of\n *     native Promises.\n */\n/**\n * With [Google Translate](https://cloud.google.com/translate), you can\n * dynamically translate text between thousands of language pairs.\n *\n * The Google Cloud Translation API lets websites and programs integrate with\n * Google Translate programmatically.\n *\n * @class\n * @memberof v2\n *\n * @see [Getting Started]{@link https://cloud.google.com/translate/v2/getting_started}\n * @see [Identifying your application to Google]{@link https://cloud.google.com/translate/v2/using_rest#auth}\n *\n * @param {ClientConfig} [options] Configuration options.\n *\n * @example\n * //-\n * // <h3>Custom Translation API</h3>\n * //\n * // The environment variable, `GOOGLE_CLOUD_TRANSLATE_ENDPOINT`, is honored as\n * // a custom backend which our library will send requests to.\n * //-\n *\n * @example <caption>include:samples/quickstart.js</caption>\n * region_tag:translate_quickstart\n * Full quickstart example:\n */\nclass Translate extends common_1.Service {\n    constructor(options = {}) {\n        options.apiEndpoint = options.apiEndpoint || 'translation.googleapis.com';\n        let baseUrl = `https://${options.apiEndpoint}/language/translate/v2`;\n        if (process.env.GOOGLE_CLOUD_TRANSLATE_ENDPOINT) {\n            baseUrl = process.env.GOOGLE_CLOUD_TRANSLATE_ENDPOINT.replace(/\\/+$/, '');\n        }\n        const config = {\n            apiEndpoint: options.apiEndpoint,\n            baseUrl,\n            scopes: ['https://www.googleapis.com/auth/cloud-platform'],\n            packageJson: require('../../../package.json'),\n            projectIdRequired: false,\n        };\n        super(config, options);\n        this.options = options || {};\n        if (this.options.key) {\n            this.key = this.options.key;\n        }\n    }\n    /**\n     * @typedef {object} DetectResult\n     * @memberof v2\n     * @property {string} 0.language The language code matched from the input.\n     * @property {number} [0.confidence] A float 0 - 1. The higher the number, the\n     *     higher the confidence in language detection. Note, this is not always\n     *     returned from the API.\n     * @property {object} 1 The full API response.\n     */\n    /**\n     * @callback DetectCallback\n     * @memberof v2\n     * @param {?Error} err Request error, if any.\n     * @param {object|object[]} results The detection results.\n     * @param {string} results.language The language code matched from the input.\n     * @param {number} [results.confidence] A float 0 - 1. The higher the number, the\n     *     higher the confidence in language detection. Note, this is not always\n     *     returned from the API.\n     * @param {object} apiResponse The full API response.\n     */\n    /**\n     * Detect the language used in a string or multiple strings.\n     *\n     * @see [Detect Language]{@link https://cloud.google.com/translate/v2/using_rest#detect-language}\n     *\n     * @param {string|string[]} input - The source string input.\n     * @param {DetectCallback} [callback] Callback function.\n     * @returns {Promise<DetectResponse>}\n     *\n     * @example\n     * const {Translate} = require('@google-cloud/translate');\n     *\n     * const translate = new Translate();\n     *\n     * //-\n     * // Detect the language from a single string input.\n     * //-\n     * translate.detect('Hello', (err, results) => {\n     *   if (!err) {\n     *     // results = {\n     *     //   language: 'en',\n     *     //   confidence: 1,\n     *     //   input: 'Hello'\n     *     // }\n     *   }\n     * });\n     *\n     * //-\n     * // Detect the languages used in multiple strings. Note that the results are\n     * // now provided as an array.\n     * //-\n     * translate.detect([\n     *   'Hello',\n     *   'Hola'\n     * ], (err, results) => {\n     *   if (!err) {\n     *     // results = [\n     *     //   {\n     *     //     language: 'en',\n     *     //     confidence: 1,\n     *     //     input: 'Hello'\n     *     //   },\n     *     //   {\n     *     //     language: 'es',\n     *     //     confidence: 1,\n     *     //     input: 'Hola'\n     *     //   }\n     *     // ]\n     *   }\n     * });\n     *\n     * //-\n     * // If the callback is omitted, we'll return a Promise.\n     * //-\n     * translate.detect('Hello').then((data) => {\n     *   const results = data[0];\n     *   const apiResponse = data[2];\n     * });\n     *\n     * @example <caption>include:samples/translate.js</caption>\n     * region_tag:translate_detect_language\n     * Here's a full example:\n     */\n    detect(input, callback) {\n        const inputIsArray = Array.isArray(input);\n        input = arrify(input);\n        this.request({\n            method: 'POST',\n            uri: '/detect',\n            json: {\n                q: input,\n            },\n        }, (err, resp) => {\n            if (err) {\n                callback(err, null, resp);\n                return;\n            }\n            let results = resp.data.detections.map((detection, index) => {\n                const result = extend({}, detection[0], {\n                    input: input[index],\n                });\n                // Deprecated.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                delete result.isReliable;\n                return result;\n            });\n            if (input.length === 1 && !inputIsArray) {\n                results = results[0];\n            }\n            callback(null, results, resp);\n        });\n    }\n    /**\n     * @typedef {object} LanguageResult\n     * @memberof v2\n     * @property {string} code The [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1)\n     *     language code.\n     * @property {string} name The language name. This can be translated into your\n     *     preferred language with the `target` option.\n     */\n    /**\n     * @callback GetLanguagesCallback\n     * @memberof v2\n     * @param {?Error} err Request error, if any.\n     * @param {object[]} results The languages supported by the API.\n     * @param {string} results.code The [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1)\n     *     language code.\n     * @param {string} results.name The language name. This can be translated into your\n     *     preferred language with the `target` option.\n     * @param {object} apiResponse The full API response.\n     */\n    /**\n     * Get an array of all supported languages.\n     *\n     * @see [Discovering Supported Languages]{@link https://cloud.google.com/translate/v2/discovering-supported-languages-with-rest}\n     *\n     * @param {string} [target] Get the language names in a language other than\n     *     English.\n     * @param {GetLanguagesCallback} [callback] Callback function.\n     * @returns {Promise<GetLanguagesResponse>}\n     *\n     * @example <caption>include:samples/translate.js</caption>\n     * region_tag:translate_list_codes\n     * Gets the language names in English:\n     *\n     * @example <caption>include:samples/translate.js</caption>\n     * region_tag:translate_list_language_names\n     * Gets the language names in a language other than English:\n     */\n    getLanguages(targetOrCallback, callback) {\n        let target;\n        if (typeof targetOrCallback === 'function') {\n            callback = targetOrCallback;\n            target = 'en';\n        }\n        else {\n            target = targetOrCallback;\n        }\n        const reqOpts = {\n            uri: '/languages',\n            useQuerystring: true,\n            qs: {},\n        };\n        if (target && typeof target === 'string') {\n            reqOpts.qs.target = target;\n        }\n        this.request(reqOpts, (err, resp) => {\n            if (err) {\n                callback(err, null, resp);\n                return;\n            }\n            const languages = resp.data.languages.map((language) => {\n                return {\n                    code: language.language,\n                    name: language.name,\n                };\n            });\n            callback(null, languages, resp);\n        });\n    }\n    /**\n     * Translate request options.\n     *\n     * @typedef {object} TranslateRequest\n     * @memberof v2\n     * @property {string} [format] Set the text's format as `html` or `text`.\n     *     If not provided, we will try to auto-detect if the text given is HTML.\n     * If not, we set the format as `text`.\n     * @property {string} [from] The ISO 639-1 language code the source input\n     *     is written in.\n     * @property {string} [model] Set the model type requested for this\n     *     translation. Please refer to the upstream documentation for possible\n     *     values.\n     * @property {string} to The ISO 639-1 language code to translate the\n     *     input to.\n     */\n    /**\n     * @callback TranslateCallback\n     * @memberof v2\n     * @param {?Error} err Request error, if any.\n     * @param {object|object[]} translations If a single string input was given, a\n     *     single translation is given. Otherwise, it is an array of translations.\n     * @param {object} apiResponse The full API response.\n     */\n    /**\n     * Translate a string or multiple strings into another language.\n     *\n     * @see [Translate Text](https://cloud.google.com/translate/v2/using_rest#Translate)\n     *\n     * @throws {Error} If `options` is provided as an object without a `to`\n     *     property.\n     *\n     * @param {string|string[]} input The source string input.\n     * @param {string|TranslateRequest} [options] If a string, it is interpreted as the\n     *     target ISO 639-1 language code to translate the source input to. (e.g.\n     *     `en` for English). If an object, you may also specify the source\n     *     language.\n     * @param {TranslateCallback} [callback] Callback function.\n     * @returns {Promise<TranslateResponse>}\n     *\n     * @example\n     * //-\n     * // Pass a string and a language code to get the translation.\n     * //-\n     * translate.translate('Hello', 'es', (err, translation) => {\n     *   if (!err) {\n     *     // translation = 'Hola'\n     *   }\n     * });\n     *\n     * //-\n     * // The source language is auto-detected by default. To manually set it,\n     * // provide an object.\n     * //-\n     * const options = {\n     *   from: 'en',\n     *   to: 'es'\n     * };\n     *\n     * translate.translate('Hello', options, (err, translation) => {\n     *   if (!err) {\n     *     // translation = 'Hola'\n     *   }\n     * });\n     *\n     * //-\n     * // Translate multiple strings of input. Note that the results are\n     * // now provided as an array.\n     * //-\n     * const input = [\n     *   'Hello',\n     *   'How are you today?'\n     * ];\n     *\n     * translate.translate(input, 'es', (err, translations) => {\n     *   if (!err) {\n     *     // translations = [\n     *     //   'Hola',\n     *     //   'Como estas hoy?'\n     *     // ]\n     *   }\n     * });\n     *\n     * //-\n     * // If the callback is omitted, we'll return a Promise.\n     * //-\n     * translate.translate('Hello', 'es').then((data) => {\n     *   const translation = data[0];\n     *   const apiResponse = data[1];\n     * });\n     *\n     * @example <caption>include:samples/translate.js</caption>\n     * region_tag:translate_translate_text\n     * Full translation example:\n     *\n     * @example <caption>include:samples/translate.js</caption>\n     * region_tag:translate_text_with_model\n     * Translation using the premium model:\n     */\n    translate(inputs, optionsOrTo, callback) {\n        const inputIsArray = Array.isArray(inputs);\n        const input = arrify(inputs);\n        let options = {};\n        if (typeof optionsOrTo === 'object') {\n            options = optionsOrTo;\n        }\n        else if (typeof optionsOrTo === 'string') {\n            options = { to: optionsOrTo };\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const body = {\n            q: input,\n            format: options.format || (isHtml(input[0]) ? 'html' : 'text'),\n        };\n        if (typeof options === 'string') {\n            body.target = options;\n        }\n        else {\n            if (options.from) {\n                body.source = options.from;\n            }\n            if (options.to) {\n                body.target = options.to;\n            }\n            if (options.model) {\n                body.model = options.model;\n            }\n        }\n        if (!body.target) {\n            throw new Error('A target language is required to perform a translation.');\n        }\n        this.request({\n            method: 'POST',\n            uri: '',\n            json: body,\n        }, (err, resp) => {\n            if (err) {\n                callback(err, null, resp);\n                return;\n            }\n            let translations = resp.data.translations.map((x) => x.translatedText);\n            if (body.q.length === 1 && !inputIsArray) {\n                translations = translations[0];\n            }\n            callback(err, translations, resp);\n        });\n    }\n    /**\n     * A custom request implementation. Requests to this API may optionally use an\n     * API key for an application, not a bearer token from a service account. This\n     * means it is possible to skip the `makeAuthenticatedRequest` portion of the\n     * typical request lifecycle, and manually authenticate the request here.\n     *\n     * @private\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {function} callback - The callback function passed to `request`.\n     */\n    request(reqOpts, callback) {\n        if (!this.key) {\n            super.request(reqOpts, callback);\n            return;\n        }\n        reqOpts.uri = this.baseUrl + reqOpts.uri;\n        reqOpts = extend(true, {}, reqOpts, {\n            qs: {\n                key: this.key,\n            },\n            headers: {\n                'User-Agent': common_1.util.getUserAgentFromPackageJson(PKG),\n            },\n        });\n        common_1.util.makeRequest(reqOpts, this.options, callback);\n    }\n}\nexports.Translate = Translate;\n/*! Developer Documentation\n *\n * All async methods (except for streams) will return a Promise in the event\n * that a callback is omitted.\n */\npromisify_1.promisifyAll(Translate, { exclude: ['request'] });\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}